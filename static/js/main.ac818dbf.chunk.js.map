{"version":3,"sources":["components/Statistics/statistics.module.css","components/FeedbackOptions/feedback.module.css","components/Section/section.module.css","components/FeedbackMessage/feedbackmessage.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/FeedbackMessage/FeedbackMessage.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","name","FeedbackOptions","onLeaveFeedback","button_name","type","onClick","Section","title","children","section","FeedbackMessage","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","target","prevState","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,YAAc,gC,kBCAhCD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,QAAU,mC,qICcbC,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGC,UAAWC,IAAEC,KAAhB,mBAA6BP,KAC7B,oBAAGK,UAAWC,IAAEC,KAAhB,sBAAgCN,KAChC,oBAAGI,UAAWC,IAAEC,KAAhB,kBAA4BL,KAC5B,oBAAGG,UAAWC,IAAEC,KAAhB,oBAA8BJ,KAC9B,oBAAGE,UAAWC,IAAEC,KAAhB,kCAA4CH,EAA5C,W,gBC0BSI,EAjCS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACE,qCACE,wBACEJ,UAAWC,IAAEI,YACbH,KAAK,OACLI,KAAK,SACLC,QAASH,EAJX,kBASA,wBACEJ,UAAWC,IAAEI,YACbH,KAAK,UACLI,KAAK,SACLC,QAASH,EAJX,qBASA,wBACEJ,UAAWC,IAAEI,YACbH,KAAK,MACLI,KAAK,SACLC,QAASH,EAJX,qB,gBCZSI,EATC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASV,UAAWC,IAAEU,QAAtB,UACE,oBAAIX,UAAWC,IAAEQ,MAAjB,SAAyBA,IACxBC,M,gBCCQE,EAJS,WACtB,OAAO,mBAAGZ,UAAWC,IAAEY,QAAhB,0BCkEMC,EAjEH,WAEV,MAAwBC,mBAAS,GAAjC,mBAAOpB,EAAP,KAAaqB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOnB,EAAP,KAAgBqB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOlB,EAAP,KAAYqB,EAAZ,KAIMC,EAAqBxB,EAAOE,EAAMD,EAgCxC,OACE,qCACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CAEEL,gBAnCU,SAACgB,GAEpB,OAAQA,EAAEC,OAAOnB,MACf,IAAK,OACH,OAAOc,GAAQ,SAACM,GAAD,OAAeA,EAAY,KAG5C,IAAK,UACH,OAAOL,GAAW,SAACK,GAAD,OAAeA,EAAY,KAG9C,IAAK,MACH,OAAOJ,GAAO,SAACI,GAAD,OAAeA,EAAY,WA2BzC,cAAC,EAAD,CAASb,MAAM,YAAf,SACGU,EACC,cAAC,EAAD,CACExB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,mBApBDwB,KAAKC,MAAO7B,EAAOwB,EAAsB,OAuB1C,cAAC,EAAD,UCrDKM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ac818dbf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"statistics_name__360wj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button_name\":\"feedback_button_name__3reGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"section_section__1ob1T\",\"title\":\"section_title__1NUHZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"feedbackmessage_message__2ksDZ\"};","import React from \"react\";\nimport s from \"./statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p className={s.name}>Good: {good}</p>\n      <p className={s.name}>Neutral: {neutral}</p>\n      <p className={s.name}>Bad: {bad}</p>\n      <p className={s.name}>Total: {total}</p>\n      <p className={s.name}>Positave Percentage: {positivePercentage}%</p>\n    </>\n  );\n};\n\nexport default Statistics;\n","// import React from 'react';\nimport s from \"./feedback.module.css\";\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n    <>\n      <button\n        className={s.button_name}\n        name=\"good\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        Good\n      </button>\n\n      <button\n        className={s.button_name}\n        name=\"neutral\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        Neutral\n      </button>\n\n      <button\n        className={s.button_name}\n        name=\"bad\"\n        type=\"button\"\n        onClick={onLeaveFeedback}\n      >\n        Bad\n      </button>\n    </>\n  );\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport s from \"./section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h1 className={s.title}>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\nimport s from \"./feedbackmessage.module.css\";\n\nconst FeedbackMessage = () => {\n  return <p className={s.message}>No feedback</p>;\n};\n\nexport default FeedbackMessage;\n","import { useState } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\nimport FeedbackMessage from \"./components/FeedbackMessage/FeedbackMessage\";\n\nconst App = () => {\n \n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  \n\n  const countTotalFeedback = good + bad + neutral\n  \n  const increment = (e) => {\n\n switch (e.target.name) {\n   case \"good\":\n     return setGood((prevState) => prevState + 1);\n     break;\n   \n   case \"neutral\":\n     return setNeutral((prevState) => prevState + 1);\n     break;\n   \n    case \"bad\":\n      return setBad((prevState) => prevState + 1);\n     break;\n   \n    default:\n        break;\n    }\n\n  }\n   \n  \n\n  \n  const countPositiveFeedbackPercentage = () => {\n    \n    return Math.round((good / countTotalFeedback) * 100);\n  };\n\n  \n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          \n          onLeaveFeedback={increment}\n        />\n      </Section>\n\n      <Section title=\"Statistic\">\n        {countTotalFeedback ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        ) : (\n          <FeedbackMessage />\n        )}\n      </Section>\n    </>\n  );\n};\nexport default App;\n\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}